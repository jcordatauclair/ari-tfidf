shallow
binding
in
lisp
shallow
binding
is
scheme
which
allows
the
value
of
variable
to
be
accessed
in
bounded
amount
of
computation
an
elegant
model
for
shallow
binding
in
lisp
is
presented
in
which
context-switching
is
an
environment
tree
transformation
called
rerooting
rerooting
is
completely
general
and
reversible
and
is
optional
in
the
sense
that
lisp
interpreter
will
operate
correctly
whether
or
not
rerooting
is
invoked
one
very
context
change
since
rerooting
leaves
assoc
invariant
for
all
variables
and
all
environments
the
programmer
can
have
access
to
rerooting
primitive
shallow
which
gives
him
dynamic
control
over
whether
accesses
are
shallow
or
deep
and
which
affects
only
the
speed
of
execution
of
program
not
its
semantics
in
addition
multiple
processes
can
be
active
in
the
same
environment
structure
so
long
as
rerooting
is
an
indivisible
operation
finally
the
concept
of
rerooting
is
shown
to
combine
the
concept
of
shallow
binding
in
lisp
with
dijkstra
display
for
algol
and
hence
is
general
model
for
shallow
binding
cacm
july
baker
jr
