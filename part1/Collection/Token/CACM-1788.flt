toward
general
processor
for
programming
languages
many
efforts
have
been
made
to
develop
better
way
of
implementing
higher
level
programming
language
than
by
the
construction
of
whole
new
compiler
but
so
far
none
has
proved
generally
satisfactory
in
this
paper
it
is
contended
that
programming
language
is
best
described
functionally
as
body
of
macro
instructions
and
that
the
macro
call
constitutes
canonical
form
in
terms
of
which
programming
notation
may
be
described
supporting
discussion
of
the
logical
and
his
torical
role
of
the
macro
instruction
is
presented
also
discussed
are
the
conflict
between
machine
independence
and
object
program
efficiency
and
the
question
of
where
the
greatest
difficulties
lie
in
compiler
construction
cacm
january
halpern
