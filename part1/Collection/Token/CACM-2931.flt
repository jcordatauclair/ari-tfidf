logic
and
programming
languages
logic
has
been
long
in
terested
in
whether
answers
to
certain
questions
are
computable
in
principle
since
the
outcome
puts
bounds
on
the
possibilities
of
formalization
more
recently
precise
comparisons
in
the
efficiency
of
decision
methods
have
become
available
through
the
developments
in
complexity
theory
these
however
are
applications
to
logic
and
big
question
is
whether
methods
of
logic
have
significance
in
the
other
direction
for
the
more
applied
parts
of
computability
theory
programming
languages
offer
an
obvious
opportunity
as
their
syntactic
formalization
is
well
advanced
however
the
semantical
theory
can
hardly
be
said
to
be
complete
though
we
have
many
examples
we
have
still
to
give
wide-ranging
mathematical
answers
to
these
queries
what
is
machine
what
is
computable
process
how
or
how
well
does
machine
simulate
process
programs
naturally
enter
in
giving
descriptions
of
processes
the
definition
of
the
precise
meaning
of
program
then
requires
us
to
explain
what
are
the
objects
of
computation
in
way
the
statics
of
the
problem
and
how
they
are
to
be
transformed
the
dynamics
so
far
the
theories
of
automata
and
of
nets
though
most
in
teresting
for
dynamics
have
formalized
only
portion
of
the
field
and
there
has
been
perhaps
too
much
concentration
on
the
finite-state
and
algebraic
aspects
it
would
seem
that
the
understanding
of
higher-level
program
features
involves
us
with
infinite
objects
and
forces
us
to
pass
through
several
levels
of
explanation
to
go
from
the
conceptual
ideas
to
the
final
simulation
on
real
machine
these
levels
can
be
made
mathematically
exact
if
we
can
find
the
right
abstractions
to
represent
the
necessary
structures
the
experience
of
many
independent
workers
with
the
method
of
data
types
as
lattices
or
partial
orderings
under
an
information
content
ordering
and
with
their
continuous
mappings
has
demonstrated
the
flexibility
of
this
approach
in
providing
definitions
and
proofs
which
are
clean
and
without
undue
dependence
on
implementations
nevertheless
much
remains
to
be
done
in
showing
how
abstract
conceptualizations
can
or
can
not
be
actualized
before
we
can
say
we
have
unified
theory
cacm
september
scott
