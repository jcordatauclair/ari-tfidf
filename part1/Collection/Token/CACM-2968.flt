comparison
of
tree-balancing
algorithms
several
algorithms-height-balance
avl
and
extensions
weight-balance
bb
and
wb
and
total
restructuring-for
building
balanced
binary
search
trees
are
compared
the
criteria
for
comparison
encompass
theoretical
aspects
path
lengths
and
implementation
independent
and
machine/algorithm-dependent
measures
run
time
detailed
analysis
of
code
is
also
presented
at
level
believed
to
be
language-and
compiler-independent
the
quality
of
the
resulting
trees
and
the
overhead
spent
on
building
them
are
analyzed
and
some
guidelines
are
given
for
an
efficient
use
of
the
methods
if
insertion
and
subsequent
queries
are
the
only
operations
of
in
terest
then
pure
avl
trees
present
the
overall
best
qualities
cacm
may
baer
schwab
