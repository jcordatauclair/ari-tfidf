block
structures
indirect
addressing
and
garbage
collection
programming
languages
have
included
explicit
or
implicit
block
structures
to
provide
naming
convenience
for
the
programmer
however
when
indirect
addressing
is
used
as
in
snobol
naming
constraints
may
be
introduced
two
modifications
to
snobol
are
described
resulting
in
two
desirable
consequences
naming
constraints
disappear
even
when
there
is
indirect
addressing
within
function
definitions
and
there
is
significant
saving
in
the
number
of
calls
to
the
garbage
collector
because
some
garbage
is
collected
at
little
expense
each
time
function
returns
to
its
calling
program
these
modifications
have
been
implemented
as
an
extension
to
snobol
dialect
cacm
july
kain
