semantic
evaluation
from
left
to
right
this
paper
describes
attribute
grammars
and
their
use
for
the
definition
of
programming
languages
and
compilers
formal
definition
of
attribute
grammars
and
discussion
of
some
of
its
important
aspects
are
included
the
paper
concentrates
on
the
evaluation
of
semantic
attributes
in
few
passes
from
left
to
right
over
the
derivation
tree
of
program
condition
for
an
attribute
grammar
is
given
which
assures
that
the
semantics
of
any
program
can
be
evaluated
in
single
pass
over
the
derivation
tree
and
an
algorithm
is
discussed
which
decides
how
many
passes
from
left
to
right
are
in
general
necessary
given
the
attribute
grammar
these
notions
are
explained
in
terms
of
an
example
grammar
which
describes
the
scope
rules
of
algol
practical
questions
such
as
the
relative
efficiency
of
different
evaluation
schemes
and
the
ease
of
adapting
the
attribute
grammar
of
given
programming
language
to
the
left-to-right
evaluation
scheme
are
discussed
cacm
february
bochmann
